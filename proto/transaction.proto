syntax = "proto3";

package proto;

option go_package = "github.com/babylonchain/btc-staker/proto";

enum TransactionState {
    SENT_TO_BTC = 0;
    CONFIRMED_ON_BTC = 1;
    SENT_TO_BABYLON = 2;
    UNBONDING_STARTED =3;
    UNBONDING_SIGNATURES_RECEIVED = 4;
    UNBONDING_CONFIRMED_ON_BTC = 5;
    SPENT_ON_BTC = 6;
}

message WatchedTxData {
    bytes slashing_transaction = 1;
    bytes slashing_transaction_sig = 2;
    bytes staker_babylon_pk = 3;
}

// Contains information about btc confirmation
message BTCConfirmationInfo {
    uint32 block_height = 1;
    bytes block_hash = 2;
}

message UnbondingTxData {
    bytes unbonding_transaction = 1;
    bytes unbonding_transaction_script = 2;
    bytes unbonding_transaction_validator_sig = 3;
    bytes unbonding_transaction_jury_sig = 4;
    // this data is only filed if tracked transactions state is >= UNBONDING_CONFIRMED_ON_BTC,
    // and it is filled as last piece of information in unbonding process
    BTCConfirmationInfo unbonding_tx_btc_confirmation_info = 5;
}

message TrackedTransaction {
    bytes staking_transaction = 1;
    bytes staking_script = 2;
    uint32 staking_output_idx = 3;
    string staker_address = 4;
    // this data is only filed if tracked transactions state is >= CONFIRMED_ON_BTC
    BTCConfirmationInfo staking_tx_btc_confirmation_info = 5;
    uint32 btc_sig_type = 6;
    bytes babylon_sig_btc_pk = 7;
    bytes btc_sig_babylon_sig = 8;
    TransactionState state = 9;
    bool watched = 10;
    // this data is only filed if tracked transactions state is >= UNBONDING_STARTED
    UnbondingTxData unbonding_tx_data = 11;
}

